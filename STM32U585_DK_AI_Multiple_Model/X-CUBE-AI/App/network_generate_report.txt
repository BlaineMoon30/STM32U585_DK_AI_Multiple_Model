Neural Network Tools for STM32AI v1.7.0 (STM.ai v8.0.1-19451)
Created date          : 2023-08-04 11:27:51
Parameters            : generate --name network -m C:/Users/grand/Desktop/dense_iris.h5 --type keras --compression none --verbosity 1 --workspace C:\Users\grand\AppData\Local\Temp\mxAI_workspace10317881950989008425821405180173767 --output C:\Users\grand\.stm32cubemx\network_output --allocate-inputs --series stm32u5 --allocate-outputs

Exec/report summary (generate)
-------------------------------------------------------------------------------------------------------------
model file         :   C:\Users\grand\Desktop\dense_iris.h5                                                  
type               :   keras                                                                                 
c_name             :   network                                                                               
compression        :   none                                                                                  
options            :   allocate-inputs, allocate-outputs                                                     
optimization       :   balanced                                                                              
target/series      :   stm32u5                                                                               
workspace dir      :   C:\Users\grand\AppData\Local\Temp\mxAI_workspace10317881950989008425821405180173767   
output dir         :   C:\Users\grand\.stm32cubemx\network_output                                            
model_fmt          :   float                                                                                 
model_name         :   dense_iris                                                                            
model_hash         :   74d5685a0a92da916657e72339a4d668                                                      
params #           :   165 items (660 B)                                                                     
-------------------------------------------------------------------------------------------------------------
input 1/1          :   'input_0' (domain:activations/**default**)                                            
                   :   4 items, 16 B, ai_float, float, (1,1,1,4)                                             
output 1/1         :   'dense_5' (domain:activations/**default**)                                            
                   :   3 items, 12 B, ai_float, float, (1,1,1,3)                                             
macc               :   228                                                                                   
weights (ro)       :   660 B (660 B) (1 segment)                                                             
activations (rw)   :   72 B (72 B) (1 segment) *                                                             
ram (total)        :   72 B (72 B) = 72 + 0 + 0                                                              
-------------------------------------------------------------------------------------------------------------
(*) 'input'/'output' buffers can be used from the activations buffer

Model name - dense_iris ['input_0'] ['dense_5']
------ ------------------------------- --------------- ------------ ------ --------------- --- --------------- -------------- ----------------------------- 
m_id   layer (type,original)           oshape          param/size     macc    connected to   | c_size          c_macc         c_type                        
------ ------------------------------- --------------- ------------ ------ --------------- --- --------------- -------------- ----------------------------- 
0      input_0 (Input, None)           [b:None,c:4]                                          | +200(+100.0%)   +60(+100.0%)   dense_of32/nl_of32[0, 1]      
       dense_3_dense (Dense, Dense)    [b:None,c:10]   50/200           50         input_0   | -200(-100.0%)   -50(-100.0%)   
       dense_3 (Nonlinearity, Dense)   [b:None,c:10]                    10   dense_3_dense   |                 -10(-100.0%)   
------ ------------------------------- --------------- ------------ ------ --------------- --- --------------- -------------- ----------------------------- 
1      dense_4_dense (Dense, Dense)    [b:None,c:8]    88/352           88         dense_3   |                 +8(+9.1%)      dense_of32/nl_of32[2, 3]      
       dense_4 (Nonlinearity, Dense)   [b:None,c:8]                      8   dense_4_dense   |                 -8(-100.0%)    
------ ------------------------------- --------------- ------------ ------ --------------- --- --------------- -------------- ----------------------------- 
2      dense_5_dense (Dense, Dense)    [b:None,c:3]    27/108           27         dense_4   |                 +45(+166.7%)   dense_of32/nl_of32[o][4, 5]   
       dense_5 (Nonlinearity, Dense)   [b:None,c:3]                     45   dense_5_dense   |                 -45(-100.0%)   
------ ------------------------------- --------------- ------------ ------ --------------- --- --------------- -------------- ----------------------------- 
model/c-model: macc=228/228  weights=660/660  activations=--/72 io=--/0



Generated C-graph summary
------------------------------------------------------------------------------------------------------------------------
model name            : dense_iris
c-name                : network
c-node #              : 6
c-array #             : 13
activations size      : 72 (1 segment)
weights size          : 660 (1 segment)
macc                  : 228
inputs                : ['input_0_output']
outputs               : ['dense_5_output']

C-Arrays (13)
------ ----------------------- ----------- ------------------------- ------------- --------- --------- 
c_id   name (*_array)          item/size   domain/mem-pool           c-type        fmt       comment   
------ ----------------------- ----------- ------------------------- ------------- --------- --------- 
0      dense_4_dense_bias      8/32        weights/weights           const float   float32             
1      input_0_output          4/16        activations/**default**   float         float32   /input    
2      dense_3_dense_output    10/40       activations/**default**   float         float32             
3      dense_5_dense_weights   24/96       weights/weights           const float   float32             
4      dense_3_output          10/40       activations/**default**   float         float32             
5      dense_4_dense_output    8/32        activations/**default**   float         float32             
6      dense_5_dense_bias      3/12        weights/weights           const float   float32             
7      dense_4_output          8/32        activations/**default**   float         float32             
8      dense_5_dense_output    3/12        activations/**default**   float         float32             
9      dense_5_output          3/12        activations/**default**   float         float32   /output   
10     dense_3_dense_weights   40/160      weights/weights           const float   float32             
11     dense_3_dense_bias      10/40       weights/weights           const float   float32             
12     dense_4_dense_weights   80/320      weights/weights           const float   float32             
------ ----------------------- ----------- ------------------------- ------------- --------- --------- 

C-Layers (6)
------ ---------------- ---- ------------ ------ ----- -------------------------- ------------------ 
c_id   name (*_layer)   id   layer_type   macc   rom   tensors                    shape (array id)   
------ ---------------- ---- ------------ ------ ----- -------------------------- ------------------ 
0      dense_3_dense    0    dense        50     200   I: input_0_output          (1,1,1,4) (1)      
                                                       W: dense_3_dense_weights   (4,1,1,10) (10)    
                                                       W: dense_3_dense_bias      (1,1,1,10) (11)    
                                                       O: dense_3_dense_output    (1,1,1,10) (2)     
------ ---------------- ---- ------------ ------ ----- -------------------------- ------------------ 
1      dense_3          0    nl           10     0     I: dense_3_dense_output    (1,1,1,10) (2)     
                                                       O: dense_3_output          (1,1,1,10) (4)     
------ ---------------- ---- ------------ ------ ----- -------------------------- ------------------ 
2      dense_4_dense    1    dense        88     352   I: dense_3_output          (1,1,1,10) (4)     
                                                       W: dense_4_dense_weights   (10,1,1,8) (12)    
                                                       W: dense_4_dense_bias      (1,1,1,8) (0)      
                                                       O: dense_4_dense_output    (1,1,1,8) (5)      
------ ---------------- ---- ------------ ------ ----- -------------------------- ------------------ 
3      dense_4          1    nl           8      0     I: dense_4_dense_output    (1,1,1,8) (5)      
                                                       O: dense_4_output          (1,1,1,8) (7)      
------ ---------------- ---- ------------ ------ ----- -------------------------- ------------------ 
4      dense_5_dense    2    dense        27     108   I: dense_4_output          (1,1,1,8) (7)      
                                                       W: dense_5_dense_weights   (8,1,1,3) (3)      
                                                       W: dense_5_dense_bias      (1,1,1,3) (6)      
                                                       O: dense_5_dense_output    (1,1,1,3) (8)      
------ ---------------- ---- ------------ ------ ----- -------------------------- ------------------ 
5      dense_5          2    nl           45     0     I: dense_5_dense_output    (1,1,1,3) (8)      
                                                       O: dense_5_output          (1,1,1,3) (9)      
------ ---------------- ---- ------------ ------ ----- -------------------------- ------------------ 



Number of operations per c-layer
------- ------ ----------------------- ----- -------------- -------- ---------- 
c_id    m_id   name (type)               #op           type   #param   sparsity 
------- ------ ----------------------- ----- -------------- -------- ---------- 
0       0      dense_3_dense (dense)      50   smul_f32_f32       50     0.0600 
1       0      dense_3 (nl)               10     op_f32_f32          
2       1      dense_4_dense (dense)      88   smul_f32_f32       88     0.0114 
3       1      dense_4 (nl)                8     op_f32_f32          
4       2      dense_5_dense (dense)      27   smul_f32_f32       27     0.0000 
5       2      dense_5 (nl)               45     op_f32_f32          
------- ------ ----------------------- ----- -------------- -------- ---------- 
total                                    228                     165     0.0242 

Number of operation types
---------------- ----- ----------- 
operation type       #           % 
---------------- ----- ----------- 
smul_f32_f32       165       72.4% 
op_f32_f32          63       27.6% 

Complexity report (model)
------ --------------- ------------------------- ------------------------- -------- 
m_id   name            c_macc                    c_rom                     c_id     
------ --------------- ------------------------- ------------------------- -------- 
0      input_0         ||||||||||        26.3%   |||||||||         30.3%   [0, 1]   
1      dense_4_dense   ||||||||||||||||  42.1%   ||||||||||||||||  53.3%   [2, 3]   
2      dense_5_dense   ||||||||||||      31.6%   |||||             16.4%   [4, 5]   
------ --------------- ------------------------- ------------------------- -------- 
macc=228 weights=660 act=72 ram_io=0

Generated files (7)
------------------------------------------------------------------ 
C:\Users\grand\.stm32cubemx\network_output\network_config.h        
C:\Users\grand\.stm32cubemx\network_output\network.h               
C:\Users\grand\.stm32cubemx\network_output\network.c               
C:\Users\grand\.stm32cubemx\network_output\network_data_params.h   
C:\Users\grand\.stm32cubemx\network_output\network_data_params.c   
C:\Users\grand\.stm32cubemx\network_output\network_data.h          
C:\Users\grand\.stm32cubemx\network_output\network_data.c          
